log_format ghost-savamrkalj_ssl_combined_plus '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $server_port $uri';

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name savamrkalj.com www.savamrkalj.com savamrkalj.colabo.space;

  access_log /var/log/nginx/ghost-savamrkalj.access.log;
  access_log /var/log/nginx/ghost-savamrkalj.access.plus.log ghost-savamrkalj_ssl_combined_plus;
  error_log /var/log/nginx/ghost-savamrkalj.error.log debug;

  # # GHOST way
  # ssl_certificate /etc/cert/blog.colabo.space/fullchain.cer;
  # ssl_certificate_key /etc/cert/blog.colabo.space/blog.colabo.space.key;
  # include /etc/nginx/snippets/ssl-params.conf;

  ssl_certificate /etc/cert/ghost-savamrkalj/fullchain.pem;
  ssl_certificate_key /etc/cert/ghost-savamrkalj/privkey.pem;
  ssl_trusted_certificate /etc/cert/ghost-savamrkalj/chain.pem;

  root /var/www/ghost-savamrkalj;
  index index.html;
  autoindex on;

  #__server_placeholder__
#==========

# [ghost-savamrkalj][well-known]
#----------
  # Allow the letsencrypt ACME Challenge
  # this is where letsencrypt will drop the callenge
  location /.well-known/acme-challenge/ {
    root /var/www/ghost-savamrkalj/letsencrypt/;
    default_type 'text/plain';
    allow all;
  }


#----------
# [ghost-savamrkalj][ghost-en]
#----------
# ghost extension


# catches anything starting with this location
location = /en {
    rewrite /en /en/home redirect;
}

# catches anything starting with this location
location /en/ {
    # take out the `en/` from the proxy forward
    # we do not do that since ghost is expecting the language-subfolder
    # (please see it the `url` in the `ghost-config.j2`)
    # rewrite /en/(.*) /$1  break;

    # tells server what is the real client address before proxy got in between
    proxy_set_header X-Real-IP $remote_addr;
    # comma separated list of proxy hopps
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # This is what tells Connect that your session
    # can be considered secure (client <-> proxy),
    # even though the protocol node.js sees is only HTTP (proxy <-> server)
    # $scheme will be `https` if it was https between client and proxy
    proxy_set_header X-Forwarded-Proto $scheme;

    # Seting Host header
    # http://nginx.org/en/docs/http/ngx_http_core_module.html#var_host
    # proxy_set_header Host $http_host;
    proxy_set_header Host $host;

    proxy_pass http://127.0.0.1:25008;

    proxy_set_header X-NginX-Proxy true;
}

#----------
# [ghost-savamrkalj][ghost-sr]
#----------
# ghost extension

location = / {
    rewrite / /sr/home redirect;
}

# catches anything starting with this location
location = /sr {
    rewrite /sr /sr/home redirect;
}

# catches anything starting with this location
location /sr/ {
    # take out the `sr/` from the proxy forward
    # we do not do that since ghost is expecting the language-subfolder
    # (please see it the `url` in the `ghost-config.j2`)
    # rewrite /sr/(.*) /$1  break;

    # tells server what is the real client address before proxy got in between
    proxy_set_header X-Real-IP $remote_addr;
    # comma separated list of proxy hopps
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # This is what tells Connect that your session
    # can be considered secure (client <-> proxy),
    # even though the protocol node.js sees is only HTTP (proxy <-> server)
    # $scheme will be `https` if it was https between client and proxy
    proxy_set_header X-Forwarded-Proto $scheme;

    # Seting Host header
    # http://nginx.org/en/docs/http/ngx_http_core_module.html#var_host
    # proxy_set_header Host $http_host;
    proxy_set_header Host $host;

    proxy_pass http://127.0.0.1:25007;

    proxy_set_header X-NginX-Proxy true;
}

#----------
# [ghost-savamrkalj][ghost-redirect]
#----------
# redirect extension

# `location ~` is a regular expression
location ~ "^/(?!(en|sr|data))" {
    # redirecs from `^/(?!(en|sr|data))` to `/sr$request_uri`
    # (please see it the `url` in the `ghost-config.j2`)
    # rewrite "/^/(?!(en|sr|data))/(.*)" "/sr$request_uri/$1"  break;

   # rewrite ^^/(?!(en|sr|data))(.*) /sr$request_uri$1 permanent;
   rewrite ^ /sr$request_uri redirect;
}

#I think this is wrong and unecessary
#location / {
#  try_files $uri en/$uri /en/home;
#}

#----------
}


server {
  listen 80;
  listen [::]:80;
  server_name savamrkalj.com www.savamrkalj.com savamrkalj.colabo.space;
  return 301 https://savamrkalj.com$request_uri;
}


  #__host_placeholder_bottom__
