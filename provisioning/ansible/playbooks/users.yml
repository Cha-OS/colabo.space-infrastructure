# joe playbooks/users.yml
# ansible-playbook -i variables/hosts.yaml -e 'ansible_ssh_user=ansible' --private-key ~/.ssh/orchestration-iaas-no.pem playbooks/users.yml
---
- hosts: "{{active_hosts_groups}}"
  vars_files:
    - ../variables/users-list.json
  remote_user: ansible
  # https://stackoverflow.com/questions/27444204/run-ansible-playbook-with-sudo
  become: yes
  become_method: sudo
  gather_facts: false
  # include_vars: users.yml
  tasks:

  - import_tasks: "include/_debug_active_hosts.yml"
    tags: [debug]

  - import_tasks: "include/_load_host_specific_data.yml"
    tags: [always]

  - name: Ensure group "developers" exists
    # https://docs.ansible.com/ansible/2.5/modules/group_module.html
    group:
      name: developers
      state: present
  # https://docs.ansible.com/ansible/2.6/modules/copy_module.html
  # https://github.com/ansible/ansible/issues/7490
  - name: Make sure `/etc/sudoers.d/95-no-pass-users` exists
    copy:
      content: ""
      dest: /etc/sudoers.d/95-no-pass-users
      force: no
      owner: root
      group: root
      mode: 0440
  # https://docs.ansible.com/ansible/2.5/modules/user_module.html
  - name: Add the user
    with_items: "{{ items_array }}"
    when: "{{ item.hosts is not defined or ((active_hosts_groups | intersect(item.hosts)) | length>0) }}" # check hosts matching
    user:
      name: '{{item.key}}'
      comment: '{{item.fullname}}'
      home: /home/{{item.key}}
      shell: /bin/bash
      groups: developers,sudo
      append: no

  # https://docs.ansible.com/ansible/latest/modules/file_module.html
  - name: Provide .ssh folder
    with_items: "{{ items_array }}"
    when: "{{ item.hosts is not defined or ((active_hosts_groups | intersect(item.hosts)) | length>0) }}" # check hosts matching
    file:
      path: /home/{{item.key}}/.ssh
      state: directory
      owner: '{{item.key}}'
      group: '{{item.key}}'
      mode: 0700
      recurse: yes

  # https://docs.ansible.com/ansible/2.6/modules/copy_module.html
  - name: Make sure authorized_keys exists
    with_items: "{{ items_array }}"
    when: "{{ item.hosts is not defined or ((active_hosts_groups | intersect(item.hosts)) | length>0) }}" # check hosts matching
    copy:
      content: ""
      dest: /home/{{item.key}}/.ssh/authorized_keys
      force: no
      owner: '{{item.key}}'
      group: '{{item.key}}'
      mode: 0600

  - name: provide key comment
    with_items: "{{ items_array }}"
    when: "{{ item.hosts is not defined or ((active_hosts_groups | intersect(item.hosts)) | length>0) }}" # check hosts matching
    lineinfile:
      path: /home/{{item.key}}/.ssh/authorized_keys
      regexp: '^\# {{item.key}}'
      line: '# {{item.key}}/({{item.fullname}}) autogenerated by OpenStack DashBoard, added to disk image'

  - name: provide key value
    with_items: "{{ items_array }}"
    when: "{{ item.hosts is not defined or ((active_hosts_groups | intersect(item.hosts)) | length>0) }}" # check hosts matching
    lineinfile:
      path: /home/{{item.key}}/.ssh/authorized_keys
      regexp: '^ssh-rsa'
      line: '{{item.ssh_pub_key}}'

  - name: nopass comment
    with_items: "{{ items_array }}"
    when: "{{ item.hosts is not defined or ((active_hosts_groups | intersect(item.hosts)) | length>0) }}" # check hosts matching
    lineinfile:
      path: /etc/sudoers.d/95-no-pass-users
      regexp: '^\#.*{{item.key}}'
      line: '# User rules for {{item.key}}'

  - name: nopass config
    with_items: "{{ items_array }}"
    when: "{{ item.hosts is not defined or ((active_hosts_groups | intersect(item.hosts)) | length>0) }}" # check hosts matching
    lineinfile:
      path: /etc/sudoers.d/95-no-pass-users
      regexp: '^{{item.key}}'
      line: '{{item.key}} ALL=(ALL) NOPASSWD:ALL'
